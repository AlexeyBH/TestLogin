//
//  ViewController.swift
//  TestLogin
//
//  Created by Alexey Khestanov on 27.10.2021.
//

import UIKit

class ViewController: UIViewController {
    
    
    // MARK: - IB Outlets
    @IBOutlet var loginTextField: UITextField!
    @IBOutlet var passwordTextField: UITextField!
    @IBOutlet var helpLogin: UIButton!
    @IBOutlet var helpPassword: UIButton!
    
    // MARK: - Private properties
    private let login = "Login"
    private let password = "Password"
    
    override func viewDidLoad() {
        super.viewDidLoad()
        loginTextField.delegate = self
        passwordTextField.delegate = self
    }

    // MARK: - Private funcs

    
    private func showInfo(_ text: String) {
        let alert = UIAlertController(title: "Info", message: text, preferredStyle: .alert)
        let closeAction = UIAlertAction(title: "Close", style: .default)
        alert.addAction(closeAction)
        present(alert, animated: true)
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        guard let destination = segue.destination as? UITabBarController,
              let thisLogin = loginTextField.text,
              let thisPassword = passwordTextField.text,
              let viewControllers = destination.viewControllers
        else { return }
        guard let user = userList.users[thisLogin], user.password == thisPassword else {
            showInfo("Wrong Login or Password!")
            self.passwordTextField.text = ""
            return
        }
        for viewController in viewControllers {
            if let casted = viewController as? ViewControllerWithUserInfo {
                casted.userInfo = user.userInfo
            } else {
                // –ß–µ—Ç–≤–µ—Ä—Ç—ã–π —ç–∫—Ä–∞–Ω –∏–º–µ–µ—Ç —Ç–∏–ø –æ–±—ã—á–Ω–æ–≥–æ –≤—å—é –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞, —Ç–æ –µ—Å—Ç—å —Ç—É—Ç –∑–∞–∫—Ä—ã–≤–∞–µ–º
                //performSegue(withIdentifier: "loginSegue", sender: self)
            }
        }
        
    }
    
    override func unwind(for unwindSegue: UIStoryboardSegue, towards subsequentVC: UIViewController) {
        loginTextField.text = ""
        passwordTextField.text = ""
    }
    
    // MARK: IB Actiona

    @IBAction func helpRecoverPassword() {
        guard let login = loginTextField.text, let user = userList.users[login] else {
            showInfo("This login doesn't exist!")
            return
        }
        showInfo("Your password is '\(user.password)' üòé")
    }
    
    @IBAction func helpUserName() {
        let userLogins = Array(userList.users).map {$0.key}
        showInfo("Please choose from: \n" + userLogins.sorted(by: >).joined(separator: "\n"))
    }


}

// MARK: - !!! –í–æ–ø—Ä–æ—Å –∫ –ù–∏–∫–∏—Ç–µ !!!
// –ü–æ—á–µ–º—É-—Ç–æ —ç—Ç–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —É –º–µ–Ω—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç

extension ViewController: UITextFieldDelegate {
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        super.touchesBegan(touches, with: event)
        view.endEditing(true)
    }
    
    private func textFieldShouldReturn(textField: UITextField) -> Bool {
        if textField == loginTextField {
            passwordTextField.becomeFirstResponder()
        } else if textField == passwordTextField {
            //performSegue(withIdentifier: "loginSegue", sender: self)
        }
        return true
    }
    
}


// –Ø —Ä–µ—à–∏–ª –ø–æ–π—Ç–∏ –¥—Ä—É–≥–∏–º –ø—É—Ç–µ–º - –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏–ª –¥–æ—á–µ—Ä–Ω–∏–µ ViewControllers –∫–∞–∫ –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å, —Å–æ–¥–µ—Ä–∂–∏—â–∏–π –≤ —Å–µ–±–µ
// –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–Ω–∏ –±—É–¥—É—Ç –±—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ View.
class ViewControllerWithUserInfo: UIViewController {
    
    var userInfo: SingleUserInfo = .init()

}

